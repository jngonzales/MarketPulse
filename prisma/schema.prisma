// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  discordId   String   @unique
  username    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  alerts      Alert[]
  portfolios  Portfolio[]
  
  @@map("users")
}

model Alert {
  id          String      @id @default(cuid())
  userId      String
  symbol      String
  condition   String      // "above" or "below"
  targetPrice Float
  isActive    Boolean     @default(true)
  triggered   Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("alerts")
}

model Portfolio {
  id          String   @id @default(cuid())
  userId      String
  symbol      String
  quantity    Float
  avgBuyPrice Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, symbol])
  @@map("portfolios")
}

model PriceHistory {
  id        String   @id @default(cuid())
  symbol    String
  price     Float
  volume    Float?
  timestamp DateTime @default(now())
  
  @@index([symbol, timestamp])
  @@map("price_history")
}

model MarketData {
  id              String   @id @default(cuid())
  symbol          String   @unique
  currentPrice    Float
  priceChange24h  Float
  priceChangePercent24h Float
  high24h         Float
  low24h          Float
  volume24h       Float
  marketCap       Float?
  lastUpdated     DateTime @default(now())
  
  @@map("market_data")
}
